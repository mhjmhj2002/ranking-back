## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url=${DB_HOST:jdbc:mysql://localhost:3306/xxx?createDatabaseIfNotExist=true&useTimezone=true&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false}
spring.datasource.url=${DB_HOST:jdbc:h2:file:/home/mhj/Documentos/dev/h2/data/mhj06}
spring.datasource.username=${DB_USER:sa}
spring.datasource.password=${DB_PASS:@h2-pass@}
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#spring.datasource.hikari.connection-timeout = 20000 #maximum number of milliseconds that a client will wait for a connection
#spring.datasource.hikari.minimum-idle= 10 #minimum number of idle connections maintained by HikariCP in a connection pool
#spring.datasource.hikari.maximum-pool-size= 10 #maximum pool size
#spring.datasource.hikari.idle-timeout=10000 #maximum idle time for connection
#spring.datasource.hikari.max-lifetime= 1000 # maximum lifetime in milliseconds of a connection in the pool after it is closed.
#spring.datasource.hikari.auto-commit =true #default auto-commit behavior.

# Dialeto SQL melhorar o SQL gerado pelo Hibernate
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

spring.jpa.defer-datasource-initialization=true
# Hibernate ddl auto (create, create-drop, validate, update)
 spring.jpa.hibernate.ddl-auto=update
 spring.sql.init.mode=always

